{"version":3,"sources":["components/spinner.gif","components/LocationMarker.js","components/LocationInfoBox.js","components/Map.js","components/Loader.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","LocationMarker","_ref","lat","lng","onClick","react_default","a","createElement","className","iconify","icon","locationIcon","LocationInfoBox","info","id","title","Map","eventData","center","zoom","_useState","useState","_useState2","Object","slicedToArray","locationInfo","setLocationInfo","markers","map","ev","index","categories","components_LocationMarker","key","geometries","coordinates","index_modern","bootstrapURLKeys","defaultCenter","defaultZoom","components_LocationInfoBox","defaultProps","Loader","src","spinner","alt","Header","App","setEventData","_useState3","_useState4","loading","setLoading","useEffect","asyncToGenerator","_regeneratorRuntime","mark","_callee","res","_yield$res$json","events","wrap","_context","prev","next","fetch","sent","json","stop","apply","this","arguments","fetchEvents","components_Header","components_Loader","components_Map","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6333bf30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ae2ed7ed.gif\";","import React from 'react'\r\nimport { Icon } from '@iconify/react'\r\nimport locationIcon from '@iconify/icons-mdi/fire-alert'\r\n\r\nconst LocationMarker = ({ lat, lng, onClick }) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={locationIcon} className=\"location-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationMarker","import React from 'react'\r\n\r\nconst LocationInfoBox = ({info}) => {\r\n  return (\r\n    <div className=\"location-info\">\r\n        <h2>Event Location info</h2>\r\n        <ul>\r\n            <li>ID: <strong> {info.id}</strong></li>\r\n            <li>TITLE: <strong> {info.title}</strong></li>\r\n        </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LocationInfoBox","import React from 'react'\r\nimport { useState } from 'react'\r\nimport GoogleMapReact from 'google-map-react'\r\nimport LocationMarker from './LocationMarker'\r\nimport LocationInfoBox from './LocationInfoBox'\r\n\r\n// define constants\r\nconst NATURAL_EVENT_WILDFIRE = 8;\r\n\r\nconst Map = ({ eventData, center, zoom }) => {\r\n    const [locationInfo, setLocationInfo] = useState(null)\r\n\r\n    const markers = eventData.map((ev, index) => {\r\n        if(ev.categories[0].id === NATURAL_EVENT_WILDFIRE) {\r\n            return <LocationMarker key={index} lat={ev.geometries[0].coordinates[1]} lng={ev.geometries[0].coordinates[0]} onClick={() => setLocationInfo({ id: ev.id, title: ev.title })} />\r\n        }\r\n        return null\r\n    })\r\n\r\n    return (\r\n        <div className=\"map\">\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key: 'AIzaSyB-RIMmc8a7ybn_Jrj0OBTtIhVq1-VGf-k' }}\r\n                defaultCenter={ center }\r\n                defaultZoom={ zoom }\r\n            >\r\n                {markers}\r\n            </GoogleMapReact>\r\n            {locationInfo && <LocationInfoBox info={locationInfo} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nMap.defaultProps = {\r\n    center: {\r\n        lat: 34,\r\n        lng: -90   \r\n    },\r\n    zoom: 6\r\n}\r\n\r\nexport default Map","import React from 'react'\r\nimport spinner from './spinner.gif'\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n        <img src= {spinner} alt=\"Loading...\"/>\r\n        <h1>fetching data</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport { Icon } from '@iconify/react'\r\nimport locationIcon from '@iconify/icons-mdi/fire-alert'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n        <h1><Icon icon={locationIcon} /> Wildfire tracker (powered by NASA)</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport Map from './components/Map'\nimport Loader from './components/Loader'\nimport Header from './components/Header'\n\nfunction App() {\n  const [eventData, setEventData] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true)\n      const res = await fetch('https://eonet.gsfc.nasa.gov/api/v2.1/events')\n      const { events } = await res.json()\n\n      setEventData(events)\n      setLoading(false)\n    }\n\n    fetchEvents()\n  }, [])\n\n  return (\n    <div>\n      <Header />\n      { !loading ? <Map eventData={eventData} /> : <Loader /> }\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}